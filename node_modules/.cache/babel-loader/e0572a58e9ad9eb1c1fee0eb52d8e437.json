{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arc_reactor\\\\React\\\\SideEffect\\\\SideEffect\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: \"false\"\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.val.includes('@')\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: \"false\"\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchState] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: \"false\"\n  });\n  const [passwordState, dispatchPwdState] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: \"false\"\n  });\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n  }, []); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"Checking form validity\");\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log(\"Cleanup\");\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(emailState.value.includes(\"@\") && passwordState.value.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(passwordState.isValid);\n    setFormIsValid(emailState.isValid && passwordState.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = event => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = event => {\n    setPasswordIsValid(passwordState.isValid);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"iaYztAYIodyVSHSikeUuIFyI/80=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Arc_reactor/React/SideEffect/SideEffect/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","act","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchState","passwordState","dispatchPwdState","console","log","emailChangeHandler","event","dispatchEmail","target","passwordChangeHandler","setEnteredPassword","validateEmailHandler","validatePasswordHandler","setPasswordIsValid","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\n\nconst emailReducer = (state, action) => {\n  if (action.type==='USER_INPUT'){\n    return {value: action.val , isValid:action.val.includes('@')};\n  }\n  return { value: \"\", isValid: \"false\" };\n};\n\nconst passwordReducer = (state, action) => {\n  if(action.type=== 'USER_INPUT'){\n    return{value: action.val,isValid:action.val.trim().length>6}\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return{value: state.value ,isValid:state.val.includes('@')};\n  }\n  return { value: \"\", isValid: \"false\" };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchState] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: \"false\",\n  });\n\n  const [passwordState, dispatchPwdState] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: \"false\",\n  });\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n  }, []);\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"Checking form validity\");\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   return () => {\n  //     console.log(\"Cleanup\");\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n    setFormIsValid(\n      emailState.value.includes(\"@\") && passwordState.value.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(passwordState.isValid);\n    setFormIsValid(emailState.isValid && passwordState.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = (event) => {\n    dispatchEmail({type:'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = (event) => {\n    setPasswordIsValid(passwordState.isValid);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}